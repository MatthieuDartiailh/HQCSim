# -*- coding: utf-8 -*-
"""
"""
from enaml.widgets.api import (DockItem, Container, Menu, Action, Dialog,
                               Notebook, Page, CheckBox, DockArea, ObjectCombo,
                               Label, ScrollArea, FlowArea, FlowItem,
                               GroupBox, PushButton)
from enaml.core.api import Include
from enaml.layout.api import hbox, vbox, spacer

from ..utils.ui.manipulation_tools import LinspaceVaryingEditor
from ..plotting.d2.plot2d_views import AddPlot2DDialog
from .commons import create_manipulate_uis, ExperimentConfig


enamldef Experiment2DItem(DockItem): main:

    attr exp
    alias area
    title = name.capitalize()

    Container:

        constraints = [hbox(vbox(auto, x_ax, y_ax, man, hbox(ed, gr, re)),
                            area), ed.width == gr.width, gr.width == re.width]

        CheckBox: auto:
            text = 'Auto-recompute'
            checked := exp.auto_update

        GroupBox: x_ax:
            title = 'X axis'
            ObjectCombo:
                items = sorted([exp.vars_meta[s]['label']
                                for s in exp.vars_meta
                                if exp.vars_meta[s]['varying']])
                selected << exp.vars_meta[exp.x_axis]['label']
                selected ::
                    for s in exp.vars_meta:
                        if exp.vars_meta[s]['label'] == selected:
                            exp.x_axis = s
                            break

            LinspaceVaryingEditor:
                exp << main.exp
                attr_name << exp.x_axis

        GroupBox: y_ax:
            title = 'Y axis'
            ObjectCombo:
                items = sorted([exp.vars_meta[s]['label']
                                for s in exp.vars_meta
                                if exp.vars_meta[s]['varying']])
                selected << exp.vars_meta[exp.y_axis]['label']
                selected ::
                    for s in exp.vars_meta:
                        if exp.vars_meta[s]['label'] == selected:
                            exp.y_axis = s
                            break

            LinspaceVaryingEditor:
                exp << main.exp
                attr_name << exp.y_axis

        ScrollArea: man:
            resist_height = 'weak'
            widget_resizable = False
            Container:
                Include: incl_man:
                    objects << create_manipulate_uis(exp,
                                                     exp.manipulate_vars)

        PushButton: ed:
            text = 'Edit'
            clicked ::
                ExperimentConfig(self, exp=exp).exec_()
                for m in incl_man.objects:
                    m.refresh = True

        PushButton: gr:
            text = 'Add graph'
            clicked ::
                AddPlot2DDialog(self, exp=exp, area=area).exec_()

        PushButton: re:
            text = 'Recompute'
            clicked ::
                exp.request_recomputation(stage='all')

        DockArea: area:
            pass
