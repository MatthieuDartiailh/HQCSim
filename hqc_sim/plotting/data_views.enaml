# -*- coding: utf-8 -*-
"""
"""
from operator import itemgetter
from enaml.core.api import Looper, Conditional
from enaml.widgets.api import (DockItem, Container, Menu, Action, Dialog,
                               PushButton, ToolBar, Action, Notebook, Page,
                               ObjectCombo, RadioButton, Label, CheckBox,
                               FlowArea, FlowItem)
from enaml.stdlib.mapped_view import MappedView
from enaml.layout.api import InsertItem, hbox, vbox, spacer, grid, factory
from ..utils.ui.qt_list_str_widget import QtListStrWidget
from .data_infos import SimpleInfo, SumInfo


enamldef AbstractInfoConfig(Container):
    """
    """
    attr exp
    attr info

    # Plot config.
    # TODO later


def _plottable_(plottable_data):
    """ Build a list of pair used to build the curve view.

    It duplicates the entries for complex between Re and imaginary parts.

    """
    items = []
    for name, meta in plottable_data.items():
        if meta['dtype'] == 'float':
            items.append((name, meta))
        else:
            real = meta.copy()
            real['dtype'] = 'real'
            imag = meta.copy()
            imag['dtype'] = 'imag'
            items.extend([('Re({})'.format(name), real),
                          ('Im({})'.format(name), imag)])
    return sorted(items, key=itemgetter(0))

enamldef SimpleInfoConfig(AbstractInfoConfig): main:
    """
    """
    attr selected_meta

    initialized ::
        if info.m_name:
            for p in exp.plottable_data.values():
                if info.m_name == p['m_name']:
                    main.selected_meta = p
                    break
    FlowArea:
        Looper: lp:
            iterable << _plottable_(exp.plottable_data)
            FlowItem:
                Container:
                    padding = 0
                    RadioButton:
                        text = loop_item[0]
                        checked << bool(info.m_name == loop_item[1]['m_name']
                                        and
                                        info.part == loop_item[1]['dtype'])
                        toggled ::
                            info.m_name = loop_item[1]['m_name']
                            info.indexes = tuple(0 for i in
                                                  range(loop_item[1]['dim']))
                            info.part = loop_item[1]['dtype']
                            main.selected_meta = loop_item[1]

    Conditional: cd1:
        condition << bool(selected_meta and selected_meta['dim'] == 1)
        FlowArea:
            Looper: lp1:
                iterable << selected_meta['map']
                FlowItem:
                    Container:
                        padding = 0
                        RadioButton:
                            text = loop_item
                            checked << info.indexes[0] == loop_index
                            toggled :: info.indexes = (loop_index,)

    # XXXX need fixes (nested Looper does not work)
#    Conditional: cd2:
#        condition << bool(_data and _data['dim'] == 2)
#        Looper:
#            iterable << _data['map']
#            Container:
#                attr it = loop_item
#                attr ind = loop_index
#                Looper: lp2:
#                    iterable << it
#                    RadioButton:
#                        text = loop_item
#                        checked << curve.indexes[ind] == loop_index
#                        toggled ::
#                            aux = list(curve.indexes)
#                            aux[ind] = loop_index
#                            curve.indexes = tuple(aux)


enamldef SumInfoConfig(AbstractInfoConfig): main:
    """
    """
    attr selected_meta

    initialized ::
        if info.m_name:
            for p in exp.plottable_data.values():
                if info.m_name == p['m_name']:
                    main.selected_meta = p
                    break
    FlowArea:
        Looper: lp:
            iterable << _plottable_(exp.plottable_data)
            FlowItem:
                Container:
                    padding = 0
                    RadioButton:
                        text = loop_item[0]
                        checked << bool(info.m_name == loop_item[1]['m_name']
                                        and
                                        info.part == loop_item[1]['dtype'])
                        toggled ::
                            info.m_name = loop_item[1]['m_name']
                            info.indexes = [tuple(0 for i in
                                                  range(loop_item[1]['dim']))]
                            info.part = loop_item[1]['dtype']
                            main.selected_meta = loop_item[1]

    Conditional: cd1:
        condition << bool(selected_meta and selected_meta['dim'] == 1)
        FlowArea:
            Looper: lp1:
                iterable << selected_meta['map']
                FlowItem:
                    Container:
                        padding = 0
                        CheckBox:
                            text = loop_item
                            checked << bool((loop_index,) in info.indexes)
                            toggled ::
                                if change['value']:
                                    aux = info.indexes[:]
                                    aux.append((loop_index,))
                                    info.indexes = aux
                                else:
                                    aux = info.indexes[:]
                                    if (loop_index,) in aux:
                                        aux.remove((loop_index,))
                                    info.indexes = aux

INFO_CONFIG_MAP = {SimpleInfo: SimpleInfoConfig,
                   SumInfo: SumInfoConfig,
                   type(None): AbstractInfoConfig}
